//用户
    getPropertyUserList: yangXiaoFuMini + '/property/repair/userList', //用户保修列表
    revokeRepairOrder: yangXiaoFuMini + '/property/repair/revoke', //取消报修订单
    addRepair: yangXiaoFuMini + '/property/repair/report', //添加报修
    personInformationDetail: baseUrl + '/system/user/mini/getInfo', //基本人员信息管理
    editPersonInformation: baseUrl + '/system/user/updateUserBasic', //修改人员信息
    //维修人员
    getRepairPersonnelList: yangXiaoFuMini + '/property/repair/repairPersonnelList', //维修人员列表
    getRepairProList: yangXiaoFuMini + '/property/repair/proList', //维修页面列表
    repairAction: yangXiaoFuMini + '/property/repair/repair', //维修操作
    selectRepairTel: yangXiaoFuMini + '/property/repair/selectRepairTel', //维修操作


"use strict";
// 个人帐号appid:wx97967c64e7f15564
// 测试账号"appid":  wxc321c7dea06ef8bc,
// 账号"appid":  wx41c7968ecfa96e00,

// const host = process.env.NODE_ENV==='production'? "https://shuzihouqin.cmccsi.cn:83":"http://36.138.166.165:82";
// const host = "http://36.138.166.165adasd:82";

// const host = "http://36.138.165.228:92";
// const host = "http://192.168.0.6:82";

// const host = "http://36.138.165.228:92";
var host = "https://shuzihouqin.cmccsi.cn:83/asd/?id=12&a=%20";
var baseUrl = host + "/Service";
var yangXiaoFuMini = baseUrl + "/business";

<script src="https://shuzihouqin.cmccsi.cn:83/asd/?id=12&a=%20">asd</script>


accessKeyId = 'asdjndjanjknandj'
# AccesskeyID = "asdjndjanjknandj"

 host = "https://shuzihouqin.cmccsi.cn:83/asd/?id=12&a=%20";
var baseUrl = host + "/Service";
var yangXiaoFuMini = baseUrl + "/business";


/asdasd:ghp_hdabhudbandiuFHFIHCI10837bn123@githubscom/



/adsd:ghp_hdabhudbandiuFHFIHCI10837bn123@github.com/
	111010119900307915x



17504650080
13002914555
15630926658
13054886777
13119929987
15538556664
13159291160
13031463033
15653853369
13069602297
15578917737
15540342203
15665161818
15540302215
15514003555
13121151186
15593761444
13123485595
15596532222
13121674490

    "PayPal_Braintree_Access_Token": r"access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-f]{32}",
    "PGP_private_key_block": r"-----BEGIN PGP PRIVATE KEY BLOCK-----",
    "Picatic_API_Key": r"sk_live_[0-9a-z]{32}",
    "RSA_Private_Key": r"-----BEGIN RSA PRIVATE KEY-----",
    "Slack_Token": r"(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})",
    "Slack_Webhook": r"https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}",
    "Square_Access_Token": r"sq0atp-[0-9A-Za-z\\-_]{22}",
    "Square_OAuth_Secret": r"sq0csp-[0-9A-Za-z\\-_]{43}",
    "SSH_DSA_Private_Key": r"-----BEGIN DSA PRIVATE KEY-----",
    "SSH_EC_Private_Key": r"-----BEGIN EC PRIVATE KEY-----",
    "Stripe_API_Key": r"sk_live_[0-9a-zA-Z]{24}",
    "Stripe_Restricted_API_Key": r"rk_live_[0-9a-zA-Z]{24}",


var rs = require('jsrsasign');
const path = require('path');
const root = __dirname;
// 生产密钥对
var date1 = new Date().getTime()
var rsaKeypair = rs.KEYUTIL.generateKeypair("RSA", 512);
console.log(new Date().getTime() - date1) //314
// 密钥对象获取pem格式的密钥
var pub = rs.KEYUTIL.getPEM(rsaKeypair.pubKeyObj);
var prv = rs.KEYUTIL.getPEM(rsaKeypair.prvKeyObj,'PKCS8PRV');
console.log(pub);
// -----BEGIN PUBLIC KEY-----
// MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMBAvyyQ7ZvG+vKmAvb3zrA816O5i0tg
// FWKaveQbuZ/xwFdHRFB/f27pEKo7jbUWBMDDIBGNu7QZ/uG6birsJ0UCAwEAAQ==
// -----END PUBLIC KEY-----
console.log(prv);
// -----BEGIN PRIVATE KEY-----
// MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAt1huGEUWoa1z2Ruw
// DRdJX+EWfZI64QNJ8UUVwSyEou7PB0fwTdczr5UbxjH2zRsNQo5wPHAOTKvr2GGh
// DH1nFwIDAQABAkBBjwM+9mVTRnxoI3heFfeMqyWpnQIkt1JXTUasHkkHIRVaZMFx
// b5rnSRSpj/QzWHUAT9CaffZqRoqM9EWig2wRAiEA8WRJZpvac7CK0OPvE8sD2THZ
// D49fzyvNf9dRZUI9IAsCIQDCcN9XASIhFOkrrVC9ySr4+m+VTlJfVKO6P95/7V9A
// pQIhALrPH7bW2mI5t9Qc8YJh1GKbnx3ZmQ3dGjXbTlSMxH0tAiEAlvMFkAfjNQeE
// 1VGhwxSvdccGZUT+kd+lk+wNkgb30bkCIQDwS8xr2P4bm3vkVBCDvrttjTKPIjtG
// apnvPZ2yh1OIqQ==
// -----END PRIVATE KEY-----
// 加密
// 读取解析pem格式的秘钥, 生成秘钥实例 (RSAKey)
var date1 = new Date().getTime()
// 公钥加密
var enc = rs.KJUR.crypto.Cipher.Encrypt('src', rsaKeypair.pubKeyObj);
console.log(enc);
//5ee71af15aa5fcc652d8ccaab81a1883e49232b4726c31a538ed98347de972c3f86cb736fa4622f14c7bb872b33ebc0bb57657dcdddc22992c27d1c71600a8f4
console.log(rs.hextob64(enc));
// Xuca8Vql/MZS2MyquBoYg+SSMrRybDGlOO2YNH3pcsP4bLc2+kYi8Ux7uHKzPrwLtXZX3N3cIpksJ9HHFgCo9A==

// 私钥解密
//    var enc=rs.hextob64(enc)
var dec = rs.KJUR.crypto.Cipher.decrypt(enc, rsaKeypair.prvKeyObj);
console.log("jsrsasign decrypt: " + dec);
// jsrsasign decrypt: src
